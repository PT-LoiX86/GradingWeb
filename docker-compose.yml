version: "3.9"

services:

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: grading_db
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "root"]
        interval: 40s
        timeout: 15s
        retries: 10
    volumes:
        - postgres_data:/var/lib/postgresql/data
    networks:
        - grading-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:9.4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
        - grading-network

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      timeout: 10s
      retries: 10

  grading-be:
    image: vietquoc2408/grading-be:0.0.1
    container_name: bottom-cv
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/grading_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8080
    networks:
      - grading-network

volumes:
  pgadmin:
  postgres_data:

networks:
  grading-network:
    driver: bridge