spring:
  application:
    name: Grading-BE
  
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: jdbc:postgresql://localhost:5432/grading_db?createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      port: 6379
      host: localhost
      connect-timeout: 2s
      timeout: 1s

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${env.app.backend.base-url}/login/oauth2/code/google
            scope: openid, profile, email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
  packages-to-scan:
    - com.grd.gradingbe

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

server:
  error:
    include-message: always
  port: 8080

env:
  app:
    backend:
      base-url: http://localhost:8080
      oauth2-login-url: ${env.app.backend.base-url}/oauth2/authorization/google
    frontend:
      base-url: http://localhost:5713
  jwt:
    secret: 22bad11769d6d81745473399385273a9b3a4a1b79c80ebd9549c4ad2dced236af529e3a0cc9ad43b1eed3ac810bfd8151434062cafdc188d03b8cada8d6c839e
    issuer: ${env.app.backend.base-url}
    refresh-token-validity-days: 7
    max-tokens-per-user: 5
